# Generated by Django 5.2.6 on 2025-09-09 06:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_students', models.IntegerField(default=0)),
                ('active_students', models.IntegerField(default=0)),
                ('total_teachers', models.IntegerField(default=0)),
                ('active_teachers', models.IntegerField(default=0)),
                ('total_assignments_created', models.IntegerField(default=0)),
                ('total_recordings_submitted', models.IntegerField(default=0)),
                ('total_recordings_reviewed', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('storage_used_gb', models.FloatField(default=0.0)),
                ('audio_files_generated', models.IntegerField(default=0)),
                ('avg_student_satisfaction', models.FloatField(default=0.0)),
                ('system_uptime_percentage', models.FloatField(default=100.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='StudentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_assignments', models.IntegerField(default=0)),
                ('completed_assignments', models.IntegerField(default=0)),
                ('submission_rate', models.FloatField(default=0.0)),
                ('total_recordings', models.IntegerField(default=0)),
                ('avg_recording_duration', models.FloatField(default=0.0)),
                ('avg_fluency_score', models.FloatField(default=0.0)),
                ('avg_accuracy_score', models.FloatField(default=0.0)),
                ('overall_grade_distribution', models.JSONField(default=dict)),
                ('days_since_last_submission', models.IntegerField(default=0)),
                ('avg_time_to_complete', models.FloatField(default=0.0)),
                ('missed_deadline_count', models.IntegerField(default=0)),
                ('improvement_trend', models.CharField(choices=[('improving', 'Improving'), ('stable', 'Stable'), ('declining', 'Declining'), ('insufficient_data', 'Insufficient Data')], default='insufficient_data', max_length=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag_type', models.CharField(choices=[('low_submission', 'Low Submission Rate'), ('short_recordings', 'Consistently Short Recordings'), ('low_performance', 'Low Performance Scores'), ('missed_deadlines', 'Frequently Misses Deadlines'), ('no_improvement', 'No Progress Improvement'), ('technical_issues', 'Repeated Technical Issues')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent Attention Required')], default='medium', max_length=10)),
                ('description', models.TextField(help_text='Detailed description of the issue')),
                ('auto_generated', models.BooleanField(default=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_flags', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('student', 'flag_type', 'is_resolved')},
            },
        ),
    ]
